<launch>
    <arg name="x_des" default="10.0" />
    <arg name="y_des" default="10.0" />
    <arg name="delay1" default="30.0" />
    <arg name="delay2" default="35.0"/>

    <param name="x_des" value="$(arg x_des)" />
    <param name="y_des" value="$(arg y_des)" />

    <arg name="world"  default="labrob_5_humans"/>  <!-- empty, ... (see ../worlds) -->
    <!--deprecated argument, you should specify the parameters below-->
    <!-- They are described in tiago.urdf.xacro -->
    <arg name="robot"  default="titanium"/>
    <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
    <arg name="end_effector"  default="pal-gripper"/>
    <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
    <arg name="laser_model"  default="sick-571"/>
    <arg name="camera_model"  default="orbbec-astra"/>
    <arg name="multi" default=""/>
    <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="public_sim" default="true"/>
    <arg name="tuck_arm" default="true"/>
    <arg name="recording" default="false"/>
    <arg name="extra_gazebo_args" default=""/>
    <arg name="use_moveit_camera" default="false"/>
    <arg name="use_dynamic_footprint" default="false"/>
    <arg name="base_type" default="pmb2"/>

    <env name="LC_NUMERIC" value="C" />

    <!-- start up world -->
    <arg name="paused" default="false" />

    <!-- start up world -->
    <include file="$(find pal_gazebo_worlds)/launch/pal_gazebo.launch">
        <arg name="world" value="$(arg world)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="recording" value="$(arg recording)"/>
        <arg name="extra_gz_model_path" value=""/>
        <arg name="extra_gz_resource_path" value="$(find labrob_gazebo_worlds)"/>
        <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
    </include>

    <!-- spawn robot in simulation -->
    <include file="$(find tiago_gazebo)/launch/tiago_spawn.launch">
        <arg name="arm" value="$(arg arm)"/>
        <arg name="end_effector" value="$(arg end_effector)"/>
        <arg name="ft_sensor" value="$(arg ft_sensor)"/>
        <arg name="laser_model" value="$(arg laser_model)"/>
        <arg name="camera_model" value="$(arg camera_model)"/>
        <arg name="multi" value="$(arg multi)"/>
        <arg name="gzpose" value="$(arg gzpose)"/>
        <arg name="base_type" value="$(arg base_type)"/>
    </include>

    <!-- bring up robot -->
    <include file="$(find tiago_gazebo)/launch/simulation_tiago_bringup.launch">
        <arg name="arm" value="$(arg arm)"/>
        <arg name="end_effector" value="$(arg end_effector)"/>
        <arg name="ft_sensor" value="$(arg ft_sensor)"/>
        <arg name="laser_model" value="$(arg laser_model)"/>
        <arg name="camera_model" value="$(arg camera_model)"/>
        <arg name="public_sim"  value="$(arg public_sim)"/>
        <arg name="use_moveit_camera" value="$(arg use_moveit_camera)"/>
        <arg name="use_dynamic_footprint" value="$(arg use_dynamic_footprint)"/>
        <arg name="base_type" value="$(arg base_type)"/>
    </include>



    <!-- point cloud throttle and filter -->
    <group unless="$(arg public_sim)">
        <include file="$(find pal_pcl_points_throttle_and_filter)/launch/throttle_filtering_points.launch">
        <arg name="cloud"  value="/xtion/depth_registered/points"/>
        </include>
    </group>



    <group if="$(arg tuck_arm)">
        <node name="tuck_arm" pkg="tiago_gazebo" type="tuck_arm.py" output="screen"/>
    </group>
    <node name="image_proc" pkg="image_proc" type="image_proc" ns="xtion/rgb"/>


    <node pkg="labrob_tiago_gazebo" type="Localization.py" name="localization" output="screen"/>



    <group ns="crowd_navigation_core">
        <node pkg="crowd_navigation_core" type="crowd_prediction" name="crowd_prediction" output="screen" launch-prefix="bash -c 'sleep $(arg delay1); $0 $@' "/>
        <node pkg="crowd_navigation_core" type="motion_generation" name="motion_generation" output="screen" launch-prefix="bash -c 'sleep $(arg delay1); $0 $@' "/>
        <node pkg="crowd_navigation_core" type="send_desired_target_position" name="send_desired_target_position" output="screen" launch-prefix="bash -c 'sleep $(arg delay2); $0 $@' " />
    </group>

</launch>